{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","hardware","undefined","fulfilled","fetchData","arg","a","fetch","toLowerCase","then","res","text","json","console","log","className","map","el","index","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAyCeA,MAtCf,WAAgB,IAAD,EACmBC,mBAAS,CAAC,MAAO,UAAW,KAAM,UAAW,SAAU,OAAQ,UAAW,QAD7F,mBACNC,EADM,aAEqBD,wBAASE,IAF9B,mBAENC,EAFM,KAIPC,GAJO,KAIE,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDAChBC,MAAM,kCAAD,OAAmCF,EAAIG,gBAAiBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAG,GAAI,OAAIC,QAAQC,IAAIF,MAD9F,2CAAH,uDAqBf,OACE,qBAAKG,UAAU,MAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,4BAAd,SAbGd,EAASe,KAAI,SAACC,EAAIC,GACvB,OAAO,oBACLH,UAAU,kCAEVI,QAAS,kBAAMf,EAAUa,IAHpB,SAIHA,GAFGC,QAWL,qBAAKH,UAAU,gBAAf,SACE,qBAAKA,UAAU,yBAAf,SAAyCZ,GAAwB,mCCrB5DiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.57338265.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [hardware, setHardware] = useState(['CPU', 'Graphic', 'OS', 'Network', 'Memory', 'Disk', 'Battery', 'USB'])\n  const [fulfilled, setfulfilled] = useState(undefined);\n\n  const fetchData = async (arg) => {\n    fetch(`http://127.0.0.1:4000/hardware/${arg.toLowerCase()}`).then(res => res.text()).then(json => console.log(json))\n    // const reader = body.getReader()\n    // if (data) {\n    //   reader.closed()\n    // }\n    // const data = await reader.read()\n    // console.log(body);\n  }\n\n  const renderHardwareList = () => {\n    return hardware.map((el, index) => {\n      return <li\n        className=\"hardware-sellection__list--elem\"\n        key={index}\n        onClick={() => fetchData(el)}\n        >{el}</li>\n    })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className='hardware-sellection'>\n        <ul className=\"hardware-sellection__list\">{renderHardwareList()}</ul>\n        <div className=\"hardware-info\">\n          <div className=\"hardware-info__content\">{fulfilled ? fulfilled : 'select something first'}</div>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}